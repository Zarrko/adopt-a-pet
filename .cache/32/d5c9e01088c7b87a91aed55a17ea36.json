{"id":"reducers/location.js","dependencies":[{"name":"/Users/zack/Desktop/fem/.babelrc","includedInParent":true,"mtime":1558517915089},{"name":"/Users/zack/Desktop/fem/package.json","includedInParent":true,"mtime":1559023473774}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = locationReducer;\n\nfunction locationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Seattle, WA\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"SET_LOCATION\") {\n    return action.payload;\n  } else {\n    return state;\n  }\n} // A reducer takes in Old State, an action object and returns new state.\n// Pure Function: Can be called many times and return same result.\n// Sample Test:\n// test(\"locationReducer\", () => {\n//   exportAllDeclaration(\n//     locationReducer(\"Seattle, WA\", {\n//       type: \"SET_LOCATION\",\n//       payload: \"San Francisco, CA\"\n//     })\n//   ).toBe(\"San Francisco\");\n// });"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"reducers/location.js","original":{"line":1,"column":15}},{"name":"locationReducer","generated":{"line":8,"column":9},"source":"reducers/location.js","original":{"line":1,"column":24}},{"generated":{"line":8,"column":24},"source":"reducers/location.js","original":{"line":1,"column":15}},{"generated":{"line":8,"column":27},"source":"reducers/location.js","original":{"line":1,"column":71}},{"generated":{"line":9,"column":0},"source":"reducers/location.js","original":{"line":1,"column":71}},{"name":"state","generated":{"line":9,"column":6},"source":"reducers/location.js","original":{"line":1,"column":40}},{"generated":{"line":9,"column":11},"source":"reducers/location.js","original":{"line":1,"column":71}},{"generated":{"line":9,"column":82},"source":"reducers/location.js","original":{"line":1,"column":48}},{"generated":{"line":9,"column":95},"source":"reducers/location.js","original":{"line":1,"column":71}},{"generated":{"line":10,"column":0},"source":"reducers/location.js","original":{"line":1,"column":71}},{"name":"action","generated":{"line":10,"column":6},"source":"reducers/location.js","original":{"line":1,"column":63}},{"generated":{"line":10,"column":12},"source":"reducers/location.js","original":{"line":1,"column":71}},{"generated":{"line":12,"column":0},"source":"reducers/location.js","original":{"line":2,"column":2}},{"name":"action","generated":{"line":12,"column":6},"source":"reducers/location.js","original":{"line":2,"column":6}},{"generated":{"line":12,"column":12},"source":"reducers/location.js","original":{"line":2,"column":12}},{"name":"type","generated":{"line":12,"column":13},"source":"reducers/location.js","original":{"line":2,"column":13}},{"generated":{"line":12,"column":17},"source":"reducers/location.js","original":{"line":2,"column":6}},{"generated":{"line":12,"column":22},"source":"reducers/location.js","original":{"line":2,"column":22}},{"generated":{"line":12,"column":36},"source":"reducers/location.js","original":{"line":2,"column":2}},{"generated":{"line":12,"column":38},"source":"reducers/location.js","original":{"line":2,"column":38}},{"generated":{"line":13,"column":0},"source":"reducers/location.js","original":{"line":3,"column":4}},{"name":"action","generated":{"line":13,"column":11},"source":"reducers/location.js","original":{"line":3,"column":11}},{"generated":{"line":13,"column":17},"source":"reducers/location.js","original":{"line":3,"column":17}},{"name":"payload","generated":{"line":13,"column":18},"source":"reducers/location.js","original":{"line":3,"column":18}},{"generated":{"line":13,"column":25},"source":"reducers/location.js","original":{"line":3,"column":4}},{"generated":{"line":14,"column":0},"source":"reducers/location.js","original":{"line":4,"column":3}},{"generated":{"line":14,"column":3},"source":"reducers/location.js","original":{"line":2,"column":2}},{"generated":{"line":14,"column":9},"source":"reducers/location.js","original":{"line":4,"column":9}},{"generated":{"line":15,"column":0},"source":"reducers/location.js","original":{"line":5,"column":4}},{"name":"state","generated":{"line":15,"column":11},"source":"reducers/location.js","original":{"line":5,"column":11}},{"generated":{"line":15,"column":16},"source":"reducers/location.js","original":{"line":5,"column":4}},{"generated":{"line":16,"column":0},"source":"reducers/location.js","original":{"line":6,"column":3}},{"generated":{"line":17,"column":0},"source":"reducers/location.js","original":{"line":7,"column":1}},{"generated":{"line":17,"column":2},"source":"reducers/location.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"reducers/location.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"reducers/location.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"reducers/location.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"reducers/location.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"reducers/location.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"reducers/location.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"reducers/location.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"reducers/location.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"reducers/location.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"reducers/location.js","original":{"line":18,"column":0}}],"sources":{"reducers/location.js":"export default function locationReducer(state = \"Seattle, WA\", action) {\n  if (action.type === \"SET_LOCATION\") {\n    return action.payload;\n  } else {\n    return state;\n  }\n}\n// A reducer takes in Old State, an action object and returns new state.\n// Pure Function: Can be called many times and return same result.\n// Sample Test:\n// test(\"locationReducer\", () => {\n//   exportAllDeclaration(\n//     locationReducer(\"Seattle, WA\", {\n//       type: \"SET_LOCATION\",\n//       payload: \"San Francisco, CA\"\n//     })\n//   ).toBe(\"San Francisco\");\n// });\n"},"lineCount":null}},"error":null,"hash":"7047b7509543153ea79b7ed237c5bf94","cacheData":{"env":{}}}